#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# Configuration for development with a connection to a Kubernetes cluster
# Requirement is the namespace `mico-testing`.
# If it does not exist, run the script `install/kubernetes/test-setup-only-build-environment.sh`

# Logging
logging.level.io.github.ust.mico.core=DEBUG

# Spring Cloud Kubernetes
spring.cloud.kubernetes.config.name=mico-core
spring.cloud.kubernetes.reload.enabled=false

# Kubernetes cluster
kubernetes.namespace-mico-workspace=mico-testing
kubernetes.namespace-openfaas-workspace=openfaas
kubernetes.build-bot.namespace-build-execution=mico-testing
kubernetes.build-bot.docker-image-repository-url=docker.io/ustmico
kubernetes.build-bot.docker-registry-service-account-name=build-bot-dockerhub
kubernetes.build-bot.kaniko-executor-image-url=gcr.io/kaniko-project/executor
kubernetes.build-bot.build-timeout=600
kubernetes.build-bot.build-clean-up-by-undeploy=true

# Prometheus
kubernetes.prometheus.uri=http://localhost:9090/api/v1/query

# Neo4j (comment out following line if you want to connect to an embedded database)
spring.data.neo4j.uri=bolt://localhost

# Redis
spring.redis.host=localhost
spring.redis.port=6379

# OpenFaaS (if you want to deploy Kafka-enabled services, set it to `http://gateway.openfaas:8080`)
openfaas.gateway=http://localhost:31112
openfaas.gateway-external-service-name=gateway-external

# Kafka (running inside the cluster, property will be used to set default values for Kafka-enabled services)
kafka.bootstrap-servers=bootstrap.kafka:9092

# Kafka config default values
kafka.group-id=mico
kafka.invalid-message-topic=InvalidMessage
kafka.dead-letter-topic=DeadLetter
kafka.test-message-output-topic=TestMessagesOutput

package io.github.ust.mico.core.model;

import com.github.zafarkhaja.semver.Version;
import io.github.ust.mico.core.model.MicoServiceDeploymentInfo.ImagePullPolicy;
import io.github.ust.mico.core.model.MicoServiceDeploymentInfo.RestartPolicy;

public class DomainModelDemo {

    @SuppressWarnings("unused")
    public static void main(String[] args) {
        Version v1 = Version.valueOf("1.0.0");
        Version v2 = Version.valueOf("1.0.0-foo");
        Version v3 = Version.valueOf("1.0.0-0.1.1");
        Version v4 = Version.valueOf("1.0.0-rc.1");
        Version v5 = Version.valueOf("v1.0.0");
        Version v6 = Version.valueOf("v1.0.0-foo");
        Version v7 = Version.valueOf("v1.0.0-0.1.1");
        Version v8 = Version.valueOf("v1.0.0-rc.1");

        // TODO: Version Wrapper

        System.out.println(v1);

        System.exit(0);

        MicoService service = MicoService.builder()
            .id(1) // Later generated by database
            .shortName("S1")
            .name("Service #1")
            .version(Version.forIntegers(1, 0, 0))
            .description("This is service number one.")
            .serviceInterface(MicoServiceInterface.builder()
                .serviceId(1)
                .port(MicoServicePort.builder()
                    .number(1234)
                    .type(MicoPortType.TCP)
                    .targetPort(5678)
                    .build())
                .publicDns("api.mico-enterprises.com") // optional
                .description("This is some API ... .") // optional
                .protocol("HTTPS") // optional
                .transportProtocol("TCP") // optional
                .build())
            .vcsRoot("https://github.com/MICO-Enterprises/service-one")
            .dockerfilePath(".")
            .dependency(MicoServiceDependency.builder() // optional
                .serviceId(2)
                .minVersion("1.0.0")
                .minVersion("1.200.300")
                .build())
            .contact("support@mico-enterprises.com") // optional
            .owner("Michael Wurster") // optional
            .build();

        MicoApplication application = MicoApplication.builder()
            .service(service.getId())
            .deploymentInfo(MicoApplicationDeploymentInfo.builder()
                .serviceDeploymentInfo(service.getId(), MicoServiceDeploymentInfo.builder()
                    .serviceId(service.getId())
                    .replicas(3)
                    .container(MicoImageContainer.builder()
                        .image("ustmicoregistry.azurecr.io/serviceone:latest")
                        .port(MicoPort.builder()
                            .number(8080)
                            .type(MicoPortType.TCP)
                            .build())
                        .name("Service one") // optional
                        .resourceLowerLimit(MicoResourceConstraint.builder() // optional
                            .cpuUnits(1)
                            .memoryInBytes(4096)
                            .build())
                        .resourceUpperLimit(MicoResourceConstraint.builder() // optional
                            .cpuUnits(3)
                            .memoryInBytes(16384)
                            .build())
                        .readOnlyRootFileSystem(false) // optional
                        .runAsNonRoot(true) // optional
                        .build())
                    .minReadySecondsBeforeMarkedAvailable(10) // optional
                    .label("app", "service-one") // optional
                    .imagePullPolicy(ImagePullPolicy.ALWAYS) // optional
                    .restartPolicy(RestartPolicy.ALWAYS) // optional
                    .build())
                .build())
            .build();
    }
}
